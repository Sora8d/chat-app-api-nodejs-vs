// source: src/clients/rpc/users/users.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.flydev_chat_app_users.Empty', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.MultipleUuids', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.RegisterUser', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.SearchContactRequest', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.Svr_msg', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.UpdateActiveRequest', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.UpdateUserRequest', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.User', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.UserMsgResponse', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.UserProfile', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.UserProfileMsgResponse', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.UserProfileUuid', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.UserResponse', null, global);
goog.exportSymbol('proto.flydev_chat_app_users.Uuid', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.UserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flydev_chat_app_users.UserResponse.repeatedFields_, null);
};
goog.inherits(proto.flydev_chat_app_users.UserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.UserResponse.displayName = 'proto.flydev_chat_app_users.UserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.Empty.displayName = 'proto.flydev_chat_app_users.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.Uuid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.Uuid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.Uuid.displayName = 'proto.flydev_chat_app_users.Uuid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.MultipleUuids = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flydev_chat_app_users.MultipleUuids.repeatedFields_, null);
};
goog.inherits(proto.flydev_chat_app_users.MultipleUuids, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.MultipleUuids.displayName = 'proto.flydev_chat_app_users.MultipleUuids';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.User.displayName = 'proto.flydev_chat_app_users.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.UserProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.UserProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.UserProfile.displayName = 'proto.flydev_chat_app_users.UserProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.RegisterUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.RegisterUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.RegisterUser.displayName = 'proto.flydev_chat_app_users.RegisterUser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.Svr_msg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.Svr_msg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.Svr_msg.displayName = 'proto.flydev_chat_app_users.Svr_msg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.UserMsgResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flydev_chat_app_users.UserMsgResponse.repeatedFields_, null);
};
goog.inherits(proto.flydev_chat_app_users.UserMsgResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.UserMsgResponse.displayName = 'proto.flydev_chat_app_users.UserMsgResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.UserProfileMsgResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flydev_chat_app_users.UserProfileMsgResponse.repeatedFields_, null);
};
goog.inherits(proto.flydev_chat_app_users.UserProfileMsgResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.UserProfileMsgResponse.displayName = 'proto.flydev_chat_app_users.UserProfileMsgResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.UserProfileUuid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.UserProfileUuid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.UserProfileUuid.displayName = 'proto.flydev_chat_app_users.UserProfileUuid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.UpdateUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.UpdateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.UpdateUserRequest.displayName = 'proto.flydev_chat_app_users.UpdateUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.UpdateActiveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.UpdateActiveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.UpdateActiveRequest.displayName = 'proto.flydev_chat_app_users.UpdateActiveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flydev_chat_app_users.SearchContactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flydev_chat_app_users.SearchContactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flydev_chat_app_users.SearchContactRequest.displayName = 'proto.flydev_chat_app_users.SearchContactRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flydev_chat_app_users.UserResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.UserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.UserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.UserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.flydev_chat_app_users.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.UserResponse}
 */
proto.flydev_chat_app_users.UserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.UserResponse;
  return proto.flydev_chat_app_users.UserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.UserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.UserResponse}
 */
proto.flydev_chat_app_users.UserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.User;
      reader.readMessage(value,proto.flydev_chat_app_users.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.UserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.UserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.UserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flydev_chat_app_users.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.flydev_chat_app_users.User>}
 */
proto.flydev_chat_app_users.UserResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.flydev_chat_app_users.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flydev_chat_app_users.User, 1));
};


/**
 * @param {!Array<!proto.flydev_chat_app_users.User>} value
 * @return {!proto.flydev_chat_app_users.UserResponse} returns this
*/
proto.flydev_chat_app_users.UserResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flydev_chat_app_users.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flydev_chat_app_users.User}
 */
proto.flydev_chat_app_users.UserResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flydev_chat_app_users.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flydev_chat_app_users.UserResponse} returns this
 */
proto.flydev_chat_app_users.UserResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.Empty}
 */
proto.flydev_chat_app_users.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.Empty;
  return proto.flydev_chat_app_users.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.Empty}
 */
proto.flydev_chat_app_users.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.Uuid.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.Uuid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.Uuid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.Uuid.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.Uuid}
 */
proto.flydev_chat_app_users.Uuid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.Uuid;
  return proto.flydev_chat_app_users.Uuid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.Uuid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.Uuid}
 */
proto.flydev_chat_app_users.Uuid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.Uuid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.Uuid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.Uuid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.Uuid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.flydev_chat_app_users.Uuid.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.Uuid} returns this
 */
proto.flydev_chat_app_users.Uuid.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flydev_chat_app_users.MultipleUuids.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.MultipleUuids.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.MultipleUuids.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.MultipleUuids} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.MultipleUuids.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuidsList: jspb.Message.toObjectList(msg.getUuidsList(),
    proto.flydev_chat_app_users.Uuid.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.MultipleUuids}
 */
proto.flydev_chat_app_users.MultipleUuids.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.MultipleUuids;
  return proto.flydev_chat_app_users.MultipleUuids.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.MultipleUuids} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.MultipleUuids}
 */
proto.flydev_chat_app_users.MultipleUuids.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.Uuid;
      reader.readMessage(value,proto.flydev_chat_app_users.Uuid.deserializeBinaryFromReader);
      msg.addUuids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.MultipleUuids.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.MultipleUuids.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.MultipleUuids} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.MultipleUuids.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuidsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flydev_chat_app_users.Uuid.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Uuid uuids = 1;
 * @return {!Array<!proto.flydev_chat_app_users.Uuid>}
 */
proto.flydev_chat_app_users.MultipleUuids.prototype.getUuidsList = function() {
  return /** @type{!Array<!proto.flydev_chat_app_users.Uuid>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flydev_chat_app_users.Uuid, 1));
};


/**
 * @param {!Array<!proto.flydev_chat_app_users.Uuid>} value
 * @return {!proto.flydev_chat_app_users.MultipleUuids} returns this
*/
proto.flydev_chat_app_users.MultipleUuids.prototype.setUuidsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flydev_chat_app_users.Uuid=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flydev_chat_app_users.Uuid}
 */
proto.flydev_chat_app_users.MultipleUuids.prototype.addUuids = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flydev_chat_app_users.Uuid, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flydev_chat_app_users.MultipleUuids} returns this
 */
proto.flydev_chat_app_users.MultipleUuids.prototype.clearUuidsList = function() {
  return this.setUuidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.User.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: (f = msg.getUuid()) && proto.flydev_chat_app_users.Uuid.toObject(includeInstance, f),
    loginUser: jspb.Message.getFieldWithDefault(msg, 3, ""),
    loginPassword: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.User}
 */
proto.flydev_chat_app_users.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.User;
  return proto.flydev_chat_app_users.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.User}
 */
proto.flydev_chat_app_users.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.flydev_chat_app_users.Uuid;
      reader.readMessage(value,proto.flydev_chat_app_users.Uuid.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flydev_chat_app_users.Uuid.serializeBinaryToWriter
    );
  }
  f = message.getLoginUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLoginPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.flydev_chat_app_users.User.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.flydev_chat_app_users.User} returns this
 */
proto.flydev_chat_app_users.User.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Uuid uuid = 2;
 * @return {?proto.flydev_chat_app_users.Uuid}
 */
proto.flydev_chat_app_users.User.prototype.getUuid = function() {
  return /** @type{?proto.flydev_chat_app_users.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.Uuid, 2));
};


/**
 * @param {?proto.flydev_chat_app_users.Uuid|undefined} value
 * @return {!proto.flydev_chat_app_users.User} returns this
*/
proto.flydev_chat_app_users.User.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.User} returns this
 */
proto.flydev_chat_app_users.User.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.User.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string login_user = 3;
 * @return {string}
 */
proto.flydev_chat_app_users.User.prototype.getLoginUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.User} returns this
 */
proto.flydev_chat_app_users.User.prototype.setLoginUser = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string login_password = 4;
 * @return {string}
 */
proto.flydev_chat_app_users.User.prototype.getLoginPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.User} returns this
 */
proto.flydev_chat_app_users.User.prototype.setLoginPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.UserProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.UserProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.UserProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: (f = msg.getUuid()) && proto.flydev_chat_app_users.Uuid.toObject(includeInstance, f),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    phone: jspb.Message.getFieldWithDefault(msg, 3, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.UserProfile}
 */
proto.flydev_chat_app_users.UserProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.UserProfile;
  return proto.flydev_chat_app_users.UserProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.UserProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.UserProfile}
 */
proto.flydev_chat_app_users.UserProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.Uuid;
      reader.readMessage(value,proto.flydev_chat_app_users.Uuid.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.UserProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.UserProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.UserProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flydev_chat_app_users.Uuid.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional Uuid uuid = 1;
 * @return {?proto.flydev_chat_app_users.Uuid}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getUuid = function() {
  return /** @type{?proto.flydev_chat_app_users.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.Uuid, 1));
};


/**
 * @param {?proto.flydev_chat_app_users.Uuid|undefined} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
*/
proto.flydev_chat_app_users.UserProfile.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.UserProfile.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string phone = 3;
 * @return {string}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string first_name = 4;
 * @return {string}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string last_name = 5;
 * @return {string}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string user_name = 6;
 * @return {string}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string avatar_url = 8;
 * @return {string}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string created_at = 9;
 * @return {string}
 */
proto.flydev_chat_app_users.UserProfile.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.UserProfile} returns this
 */
proto.flydev_chat_app_users.UserProfile.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.RegisterUser.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.RegisterUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.RegisterUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.RegisterUser.toObject = function(includeInstance, msg) {
  var f, obj = {
    loginInfo: (f = msg.getLoginInfo()) && proto.flydev_chat_app_users.User.toObject(includeInstance, f),
    profileInfo: (f = msg.getProfileInfo()) && proto.flydev_chat_app_users.UserProfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.RegisterUser}
 */
proto.flydev_chat_app_users.RegisterUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.RegisterUser;
  return proto.flydev_chat_app_users.RegisterUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.RegisterUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.RegisterUser}
 */
proto.flydev_chat_app_users.RegisterUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.User;
      reader.readMessage(value,proto.flydev_chat_app_users.User.deserializeBinaryFromReader);
      msg.setLoginInfo(value);
      break;
    case 2:
      var value = new proto.flydev_chat_app_users.UserProfile;
      reader.readMessage(value,proto.flydev_chat_app_users.UserProfile.deserializeBinaryFromReader);
      msg.setProfileInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.RegisterUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.RegisterUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.RegisterUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.RegisterUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLoginInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flydev_chat_app_users.User.serializeBinaryToWriter
    );
  }
  f = message.getProfileInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flydev_chat_app_users.UserProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional User login_info = 1;
 * @return {?proto.flydev_chat_app_users.User}
 */
proto.flydev_chat_app_users.RegisterUser.prototype.getLoginInfo = function() {
  return /** @type{?proto.flydev_chat_app_users.User} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.User, 1));
};


/**
 * @param {?proto.flydev_chat_app_users.User|undefined} value
 * @return {!proto.flydev_chat_app_users.RegisterUser} returns this
*/
proto.flydev_chat_app_users.RegisterUser.prototype.setLoginInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.RegisterUser} returns this
 */
proto.flydev_chat_app_users.RegisterUser.prototype.clearLoginInfo = function() {
  return this.setLoginInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.RegisterUser.prototype.hasLoginInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserProfile profile_info = 2;
 * @return {?proto.flydev_chat_app_users.UserProfile}
 */
proto.flydev_chat_app_users.RegisterUser.prototype.getProfileInfo = function() {
  return /** @type{?proto.flydev_chat_app_users.UserProfile} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.UserProfile, 2));
};


/**
 * @param {?proto.flydev_chat_app_users.UserProfile|undefined} value
 * @return {!proto.flydev_chat_app_users.RegisterUser} returns this
*/
proto.flydev_chat_app_users.RegisterUser.prototype.setProfileInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.RegisterUser} returns this
 */
proto.flydev_chat_app_users.RegisterUser.prototype.clearProfileInfo = function() {
  return this.setProfileInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.RegisterUser.prototype.hasProfileInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.Svr_msg.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.Svr_msg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.Svr_msg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.Svr_msg.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.Svr_msg}
 */
proto.flydev_chat_app_users.Svr_msg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.Svr_msg;
  return proto.flydev_chat_app_users.Svr_msg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.Svr_msg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.Svr_msg}
 */
proto.flydev_chat_app_users.Svr_msg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.Svr_msg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.Svr_msg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.Svr_msg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.Svr_msg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 status = 1;
 * @return {number}
 */
proto.flydev_chat_app_users.Svr_msg.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.flydev_chat_app_users.Svr_msg} returns this
 */
proto.flydev_chat_app_users.Svr_msg.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.flydev_chat_app_users.Svr_msg.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.Svr_msg} returns this
 */
proto.flydev_chat_app_users.Svr_msg.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flydev_chat_app_users.UserMsgResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.UserMsgResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.UserMsgResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.UserMsgResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserMsgResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.flydev_chat_app_users.User.toObject, includeInstance),
    msg: (f = msg.getMsg()) && proto.flydev_chat_app_users.Svr_msg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.UserMsgResponse}
 */
proto.flydev_chat_app_users.UserMsgResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.UserMsgResponse;
  return proto.flydev_chat_app_users.UserMsgResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.UserMsgResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.UserMsgResponse}
 */
proto.flydev_chat_app_users.UserMsgResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.User;
      reader.readMessage(value,proto.flydev_chat_app_users.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = new proto.flydev_chat_app_users.Svr_msg;
      reader.readMessage(value,proto.flydev_chat_app_users.Svr_msg.deserializeBinaryFromReader);
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.UserMsgResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.UserMsgResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.UserMsgResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserMsgResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flydev_chat_app_users.User.serializeBinaryToWriter
    );
  }
  f = message.getMsg();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flydev_chat_app_users.Svr_msg.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.flydev_chat_app_users.User>}
 */
proto.flydev_chat_app_users.UserMsgResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.flydev_chat_app_users.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flydev_chat_app_users.User, 1));
};


/**
 * @param {!Array<!proto.flydev_chat_app_users.User>} value
 * @return {!proto.flydev_chat_app_users.UserMsgResponse} returns this
*/
proto.flydev_chat_app_users.UserMsgResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flydev_chat_app_users.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flydev_chat_app_users.User}
 */
proto.flydev_chat_app_users.UserMsgResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flydev_chat_app_users.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flydev_chat_app_users.UserMsgResponse} returns this
 */
proto.flydev_chat_app_users.UserMsgResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * optional Svr_msg msg = 2;
 * @return {?proto.flydev_chat_app_users.Svr_msg}
 */
proto.flydev_chat_app_users.UserMsgResponse.prototype.getMsg = function() {
  return /** @type{?proto.flydev_chat_app_users.Svr_msg} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.Svr_msg, 2));
};


/**
 * @param {?proto.flydev_chat_app_users.Svr_msg|undefined} value
 * @return {!proto.flydev_chat_app_users.UserMsgResponse} returns this
*/
proto.flydev_chat_app_users.UserMsgResponse.prototype.setMsg = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.UserMsgResponse} returns this
 */
proto.flydev_chat_app_users.UserMsgResponse.prototype.clearMsg = function() {
  return this.setMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.UserMsgResponse.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.UserProfileMsgResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.UserProfileMsgResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userList: jspb.Message.toObjectList(msg.getUserList(),
    proto.flydev_chat_app_users.UserProfile.toObject, includeInstance),
    msg: (f = msg.getMsg()) && proto.flydev_chat_app_users.Svr_msg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.UserProfileMsgResponse}
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.UserProfileMsgResponse;
  return proto.flydev_chat_app_users.UserProfileMsgResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.UserProfileMsgResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.UserProfileMsgResponse}
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.UserProfile;
      reader.readMessage(value,proto.flydev_chat_app_users.UserProfile.deserializeBinaryFromReader);
      msg.addUser(value);
      break;
    case 2:
      var value = new proto.flydev_chat_app_users.Svr_msg;
      reader.readMessage(value,proto.flydev_chat_app_users.Svr_msg.deserializeBinaryFromReader);
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.UserProfileMsgResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.UserProfileMsgResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flydev_chat_app_users.UserProfile.serializeBinaryToWriter
    );
  }
  f = message.getMsg();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flydev_chat_app_users.Svr_msg.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserProfile user = 1;
 * @return {!Array<!proto.flydev_chat_app_users.UserProfile>}
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.getUserList = function() {
  return /** @type{!Array<!proto.flydev_chat_app_users.UserProfile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flydev_chat_app_users.UserProfile, 1));
};


/**
 * @param {!Array<!proto.flydev_chat_app_users.UserProfile>} value
 * @return {!proto.flydev_chat_app_users.UserProfileMsgResponse} returns this
*/
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.setUserList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flydev_chat_app_users.UserProfile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flydev_chat_app_users.UserProfile}
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.addUser = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flydev_chat_app_users.UserProfile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flydev_chat_app_users.UserProfileMsgResponse} returns this
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.clearUserList = function() {
  return this.setUserList([]);
};


/**
 * optional Svr_msg msg = 2;
 * @return {?proto.flydev_chat_app_users.Svr_msg}
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.getMsg = function() {
  return /** @type{?proto.flydev_chat_app_users.Svr_msg} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.Svr_msg, 2));
};


/**
 * @param {?proto.flydev_chat_app_users.Svr_msg|undefined} value
 * @return {!proto.flydev_chat_app_users.UserProfileMsgResponse} returns this
*/
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.setMsg = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.UserProfileMsgResponse} returns this
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.clearMsg = function() {
  return this.setMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.UserProfileMsgResponse.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.UserProfileUuid.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.UserProfileUuid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.UserProfileUuid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserProfileUuid.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: (f = msg.getUuid()) && proto.flydev_chat_app_users.Uuid.toObject(includeInstance, f),
    user: (f = msg.getUser()) && proto.flydev_chat_app_users.UserProfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.UserProfileUuid}
 */
proto.flydev_chat_app_users.UserProfileUuid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.UserProfileUuid;
  return proto.flydev_chat_app_users.UserProfileUuid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.UserProfileUuid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.UserProfileUuid}
 */
proto.flydev_chat_app_users.UserProfileUuid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.Uuid;
      reader.readMessage(value,proto.flydev_chat_app_users.Uuid.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = new proto.flydev_chat_app_users.UserProfile;
      reader.readMessage(value,proto.flydev_chat_app_users.UserProfile.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.UserProfileUuid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.UserProfileUuid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.UserProfileUuid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UserProfileUuid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flydev_chat_app_users.Uuid.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flydev_chat_app_users.UserProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional Uuid uuid = 1;
 * @return {?proto.flydev_chat_app_users.Uuid}
 */
proto.flydev_chat_app_users.UserProfileUuid.prototype.getUuid = function() {
  return /** @type{?proto.flydev_chat_app_users.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.Uuid, 1));
};


/**
 * @param {?proto.flydev_chat_app_users.Uuid|undefined} value
 * @return {!proto.flydev_chat_app_users.UserProfileUuid} returns this
*/
proto.flydev_chat_app_users.UserProfileUuid.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.UserProfileUuid} returns this
 */
proto.flydev_chat_app_users.UserProfileUuid.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.UserProfileUuid.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserProfile user = 2;
 * @return {?proto.flydev_chat_app_users.UserProfile}
 */
proto.flydev_chat_app_users.UserProfileUuid.prototype.getUser = function() {
  return /** @type{?proto.flydev_chat_app_users.UserProfile} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.UserProfile, 2));
};


/**
 * @param {?proto.flydev_chat_app_users.UserProfile|undefined} value
 * @return {!proto.flydev_chat_app_users.UserProfileUuid} returns this
*/
proto.flydev_chat_app_users.UserProfileUuid.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.UserProfileUuid} returns this
 */
proto.flydev_chat_app_users.UserProfileUuid.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.UserProfileUuid.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.UpdateUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.UpdateUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.UpdateUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UpdateUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: (f = msg.getContent()) && proto.flydev_chat_app_users.UserProfileUuid.toObject(includeInstance, f),
    partial: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.UpdateUserRequest}
 */
proto.flydev_chat_app_users.UpdateUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.UpdateUserRequest;
  return proto.flydev_chat_app_users.UpdateUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.UpdateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.UpdateUserRequest}
 */
proto.flydev_chat_app_users.UpdateUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.UserProfileUuid;
      reader.readMessage(value,proto.flydev_chat_app_users.UserProfileUuid.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPartial(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.UpdateUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.UpdateUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.UpdateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UpdateUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flydev_chat_app_users.UserProfileUuid.serializeBinaryToWriter
    );
  }
  f = message.getPartial();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional UserProfileUuid content = 1;
 * @return {?proto.flydev_chat_app_users.UserProfileUuid}
 */
proto.flydev_chat_app_users.UpdateUserRequest.prototype.getContent = function() {
  return /** @type{?proto.flydev_chat_app_users.UserProfileUuid} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.UserProfileUuid, 1));
};


/**
 * @param {?proto.flydev_chat_app_users.UserProfileUuid|undefined} value
 * @return {!proto.flydev_chat_app_users.UpdateUserRequest} returns this
*/
proto.flydev_chat_app_users.UpdateUserRequest.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.UpdateUserRequest} returns this
 */
proto.flydev_chat_app_users.UpdateUserRequest.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.UpdateUserRequest.prototype.hasContent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool partial = 2;
 * @return {boolean}
 */
proto.flydev_chat_app_users.UpdateUserRequest.prototype.getPartial = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flydev_chat_app_users.UpdateUserRequest} returns this
 */
proto.flydev_chat_app_users.UpdateUserRequest.prototype.setPartial = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.UpdateActiveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.UpdateActiveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.UpdateActiveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UpdateActiveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: (f = msg.getUuid()) && proto.flydev_chat_app_users.Uuid.toObject(includeInstance, f),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.UpdateActiveRequest}
 */
proto.flydev_chat_app_users.UpdateActiveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.UpdateActiveRequest;
  return proto.flydev_chat_app_users.UpdateActiveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.UpdateActiveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.UpdateActiveRequest}
 */
proto.flydev_chat_app_users.UpdateActiveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flydev_chat_app_users.Uuid;
      reader.readMessage(value,proto.flydev_chat_app_users.Uuid.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.UpdateActiveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.UpdateActiveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.UpdateActiveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.UpdateActiveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flydev_chat_app_users.Uuid.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional Uuid uuid = 1;
 * @return {?proto.flydev_chat_app_users.Uuid}
 */
proto.flydev_chat_app_users.UpdateActiveRequest.prototype.getUuid = function() {
  return /** @type{?proto.flydev_chat_app_users.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.flydev_chat_app_users.Uuid, 1));
};


/**
 * @param {?proto.flydev_chat_app_users.Uuid|undefined} value
 * @return {!proto.flydev_chat_app_users.UpdateActiveRequest} returns this
*/
proto.flydev_chat_app_users.UpdateActiveRequest.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flydev_chat_app_users.UpdateActiveRequest} returns this
 */
proto.flydev_chat_app_users.UpdateActiveRequest.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flydev_chat_app_users.UpdateActiveRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.flydev_chat_app_users.UpdateActiveRequest.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flydev_chat_app_users.UpdateActiveRequest} returns this
 */
proto.flydev_chat_app_users.UpdateActiveRequest.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flydev_chat_app_users.SearchContactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flydev_chat_app_users.SearchContactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flydev_chat_app_users.SearchContactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.SearchContactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flydev_chat_app_users.SearchContactRequest}
 */
proto.flydev_chat_app_users.SearchContactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flydev_chat_app_users.SearchContactRequest;
  return proto.flydev_chat_app_users.SearchContactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flydev_chat_app_users.SearchContactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flydev_chat_app_users.SearchContactRequest}
 */
proto.flydev_chat_app_users.SearchContactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flydev_chat_app_users.SearchContactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flydev_chat_app_users.SearchContactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flydev_chat_app_users.SearchContactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flydev_chat_app_users.SearchContactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.flydev_chat_app_users.SearchContactRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flydev_chat_app_users.SearchContactRequest} returns this
 */
proto.flydev_chat_app_users.SearchContactRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.flydev_chat_app_users);
